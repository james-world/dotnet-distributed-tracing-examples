# Docker Compose file for complex OpenTelemetry example
# Run with:
# docker compose -p demo up -d

services:

  elastic-kibana:
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    image: docker.elastic.co/kibana/kibana-oss:7.6.1
    networks:
      - default
    ports:
      - '5601:5601'

  elasticsearch:
    environment:
      - node.name=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.6.1
    networks:
      - default
    ports:
      - '9200:9200'
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  jaeger:
    environment:
      - 'COLLECTOR_ZIPKIN_HOST_PORT=:9411'
    image: 'jaegertracing/all-in-one:1.29'
    networks:
      - default
    ports:
      - '5775:5775/udp'
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '14250:14250'
      - '14268:14268'
      - '14269:14269'
      - '9411:9411'

  postgres:
    environment:
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: password
    image: postgres:14.2
    networks:
      - default
    ports:
      - '5432:5432'
    restart: always
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  postgres-adminer:
    image: adminer
    networks:
      - default
    ports:
      - '8080:8080'
    restart: always

  rabbitmq:
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    image: rabbitmq:3-management
    networks:
      - default
    ports:
      - '5672:5672'
      - '15672:15672'
    restart: always

networks:
  default:
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: "fd87:1f03:269c:327c::/112"
        - subnet: "10.50.124.0/24"

volumes:
  elasticsearch-data:
    driver: local
  postgresql-data:
    driver: local
